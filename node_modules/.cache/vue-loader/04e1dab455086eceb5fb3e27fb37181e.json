{"remainingRequest":"/home/himanshu/Desktop/RA_Work/FOSSEE/prabhu_sir/vue/VueTodo/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/himanshu/Desktop/RA_Work/FOSSEE/prabhu_sir/vue/VueTodo/src/components/TodoList.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/himanshu/Desktop/RA_Work/FOSSEE/prabhu_sir/vue/VueTodo/src/components/TodoList.vue","mtime":1556875657679},{"path":"/home/himanshu/Desktop/RA_Work/FOSSEE/prabhu_sir/vue/VueTodo/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/himanshu/Desktop/RA_Work/FOSSEE/prabhu_sir/vue/VueTodo/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/himanshu/Desktop/RA_Work/FOSSEE/prabhu_sir/vue/VueTodo/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/himanshu/Desktop/RA_Work/FOSSEE/prabhu_sir/vue/VueTodo/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport { mapState, mapActions } from 'vuex'\n\nimport TodoForm from './TodoForm.vue'\n//import ListItem from './ListItem.vue'\n\nexport default {\n  name: 'TodoList',\n  components: {\n    TodoForm,\n    //ListItem\n  },\n  computed: {\n    ...mapState([\n      'todos',\n      'completed'\n    ]),\n    sortedTodos () {\n      return this.todos.slice().sort((a, b) => a.priority - b.priority)\n    }\n  },\n  mounted () {\n    this.checkStorage()\n  },\n  methods: {\n    ...mapActions([\n      'addTodo',\n      'deleteTodo',\n      'completeTodo',\n      'checkStorage',\n      'saveTodos'\n    ])\n  }\n}\n",{"version":3,"sources":["TodoList.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA8BA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"TodoList.vue","sourceRoot":"src/components","sourcesContent":["<template>\n<div>\n  <h1 id=\"title\">Questions</h1>\n  <todo-form @submit=\"addTodo\" />\n\n  <ul id=\"todo-list\">\n    <list-item\n      v-for=\"(todo, i) in sortedTodos\"\n      :key=\"i\"\n      :todo=\"todo\"\n      @delete=\"deleteTodo(i)\"\n      @complete=\"completeTodo(i)\"\n      @edit=\"saveTodos\"\n    />\n  </ul>\n\n  <h3 v-if=\"completed.length > 0\">Done</h3>\n  <ul id=\"todo-list\">\n    <list-item\n      v-for=\"(todo, i) in completed\"\n      :key=\"i\"\n      :todo=\"todo\"\n      :isCompleted=\"true\"\n      @delete=\"deleteTodo({ i, isCompleted: true })\"\n    />\n  </ul>\n</div>\n</template>\n\n<script>\nimport { mapState, mapActions } from 'vuex'\n\nimport TodoForm from './TodoForm.vue'\n//import ListItem from './ListItem.vue'\n\nexport default {\n  name: 'TodoList',\n  components: {\n    TodoForm,\n    //ListItem\n  },\n  computed: {\n    ...mapState([\n      'todos',\n      'completed'\n    ]),\n    sortedTodos () {\n      return this.todos.slice().sort((a, b) => a.priority - b.priority)\n    }\n  },\n  mounted () {\n    this.checkStorage()\n  },\n  methods: {\n    ...mapActions([\n      'addTodo',\n      'deleteTodo',\n      'completeTodo',\n      'checkStorage',\n      'saveTodos'\n    ])\n  }\n}\n</script>\n\n<style scoped>\n#title {\n  text-align: center;\n  margin: 40px 0;\n}\n\n#todo-list {\n  margin: 0;\n  padding: 0;\n}\n</style>\n"]}]}