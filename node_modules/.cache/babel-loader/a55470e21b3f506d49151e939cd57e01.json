{"remainingRequest":"/home/himanshu/Desktop/RA_Work/FOSSEE/prabhu_sir/vue/OfflineTest/node_modules/babel-loader/lib/index.js!/home/himanshu/Desktop/RA_Work/FOSSEE/prabhu_sir/vue/OfflineTest/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/himanshu/Desktop/RA_Work/FOSSEE/prabhu_sir/vue/OfflineTest/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/himanshu/Desktop/RA_Work/FOSSEE/prabhu_sir/vue/OfflineTest/src/components/TodoForm.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/himanshu/Desktop/RA_Work/FOSSEE/prabhu_sir/vue/OfflineTest/src/components/TodoForm.vue","mtime":1561229878689},{"path":"/home/himanshu/Desktop/RA_Work/FOSSEE/prabhu_sir/vue/OfflineTest/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/himanshu/Desktop/RA_Work/FOSSEE/prabhu_sir/vue/OfflineTest/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/himanshu/Desktop/RA_Work/FOSSEE/prabhu_sir/vue/OfflineTest/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/himanshu/Desktop/RA_Work/FOSSEE/prabhu_sir/vue/OfflineTest/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import _JSON$stringify from \"/home/himanshu/Desktop/RA_Work/FOSSEE/prabhu_sir/vue/OfflineTest/node_modules/@babel/runtime-corejs2/core-js/json/stringify\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport axios from 'axios';\n\nvar base64 = require('base-64');\n\nvar username = 'hello';\nvar password = 'hello';\nvar url_validate = \"http://127.0.0.1:8000/api/validate/\";\nvar url_courses = \"http://127.0.0.1:8000/api/get_courses/\";\nvar url_start_quiz = \"http://127.0.0.1:8000/api/start_quiz/\";\nvar headers = new Headers();\nheaders.set('Authorization', 'Basic ' + base64.encode(username + \":\" + password));\nheaders.set('Accept', 'application/json');\nheaders.set('Content-Type', 'application/json');\nexport default {\n  name: 'TodoForm',\n  props: {\n    currentQuestion: {\n      type: Object\n    }\n  },\n  data: function data() {\n    return {\n      questions: [],\n      courses: [],\n      selectedQuestionData: null,\n      isSelectedQuestion: false,\n      answer: \"\",\n      quizzes: [],\n      course_id: \"\",\n      attempt_no: \"\",\n      answer_paper_id: \"\",\n      user_id: \"\",\n      tornadoServerMessage: \"\",\n      isSubmitted: \"\",\n      isLearningModuleSelected: false,\n      isStartQuiz: false\n    };\n  },\n  computed: {},\n  methods: {\n    selectQuestion: function selectQuestion(selectedQuestionData) {\n      this.selectedQuestionData = selectedQuestionData;\n      this.isSelectedQuestion = true;\n    },\n    submit: function submit() {\n      var _this = this;\n\n      this.tornadoServerMessage = \"\";\n      this.isSubmitted = true;\n      fetch(url_validate.concat(this.answer_paper_id).concat(\"/\").concat(this.selectedQuestionData.id).concat(\"/\"), {\n        method: \"post\",\n        headers: headers,\n        body: _JSON$stringify({\n          \"answer\": this.answer\n        })\n      }).then(function (res) {\n        console.log(res);\n        return res.json();\n      }).then(function (jsonResponse) {\n        console.log(jsonResponse);\n        _this.user_id = jsonResponse.uid;\n        console.log(_this.user_id);\n      }).catch(function (err) {\n        err;\n      });\n    },\n    get_learning_module_for_this_course: function get_learning_module_for_this_course(course) {\n      this.learning_module = course.learning_module; //console.log(this.learning_module)\n\n      this.isLearningModuleSelected = true;\n      this.quizzes = course.learning_module[0].learning_unit;\n      console.log(this.quizzes);\n      this.course_id = course.id;\n    },\n    startQuiz: function startQuiz(quiz) {\n      var _this2 = this;\n\n      fetch(url_start_quiz.concat(this.course_id).concat(\"/\").concat(quiz.quiz.id).concat(\"/\"), {\n        method: \"get\",\n        headers: headers\n      }).then(function (res) {\n        console.log(res);\n        return res.json();\n      }).then(function (jsonResponse) {\n        console.log(jsonResponse);\n        _this2.questions = jsonResponse.questions;\n        console.log(\"hello\");\n        console.log(jsonResponse.questions);\n        _this2.isStartQuiz = true;\n        _this2.answer_paper_id = jsonResponse.id;\n        _this2.attempt_no = jsonResponse.attempt_number;\n\n        _this2.$emit('loading_questions', _this2.questions);\n      }).catch(function (err) {\n        err;\n      });\n    },\n    validate: function validate() {\n      var _this3 = this;\n\n      fetch(url_validate.concat(this.user_id).concat(\"/\"), {\n        method: \"get\",\n        headers: headers\n      }).then(function (res) {\n        console.log(res);\n        return res.json();\n      }).then(function (jsonResponse) {\n        console.log(jsonResponse);\n        _this3.tornadoServerMessage = JSON.parse(jsonResponse.result);\n      }).catch(function (err) {\n        err;\n      });\n    }\n  },\n\n  /**\n  fetch(url_post, {\n        method: 'get',\n        headers: headers,\n      },)\n      .then((response) => {\n        console.log(response)\n        return response.json()\n      })\n      .then((jsonData) => {\n        //this.questions = jsonData \n        console.log(jsonData)\n        //this.$emit('submit', this.questions)\n      })\n  **/\n  created: function created() {\n    if (this.isSelected === true) {\n      this.currentQuestion = this.selectedQuestionData;\n    }\n  },\n  mounted: function mounted() {\n    var _this4 = this;\n\n    fetch(url_courses, {\n      method: \"get\",\n      headers: headers\n    }).then(function (res) {\n      console.log(res);\n      return res.json();\n    }).then(function (jsonResponse) {\n      console.log(jsonResponse);\n      _this4.courses = jsonResponse;\n\n      _this4.$emit('loading_courses', _this4.courses);\n    }).catch(function (err) {\n      err;\n    });\n  }\n};",{"version":3,"sources":["TodoForm.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n<div>\n  <b-container class=\"todo-form\">\n    <b-col v-if=\"this.isLearningModuleSelected===false\">\n            <ul v-for=\"(course, index) in this.courses\" :key=\"index\" @click=\"get_learning_module_for_this_course(course)\">\n            <li class=\"todo-item\">{{course.name}} </li> \n            </ul>\n    </b-col>\n\n    <b-col v-if=\"this.isLearningModuleSelected===true && this.isStartQuiz===false\">\n            Quizzes </br>\n            <ul v-for=\"(quiz, index) in this.quizzes\" :key=\"index\" @click=\"startQuiz(quiz)\">\n            <li class=\"todo-item\"> {{index+1}} &nbsp;&nbsp;&nbsp;{{quiz.quiz.description}} </li> \n            </ul>\n    </b-col>\n\n    <b-col v-if=\"this.isStartQuiz===true\">\n            Questions</br>\n            <ul v-for=\"(question, index) in this.questions\" :key=\"index\" @click=\"selectQuestion(question)\">\n            <li class=\"todo-item\"> {{index+1}} &nbsp;&nbsp;&nbsp;{{question.summary}} </li>  \n            </ul>\n    </b-col>\n    \n    <b-col>\n      <form @submit.prevent=\"submit\">         \n          <div v-if=\"this.isSelectedQuestion===true\"> {{this.selectedQuestionData.summary}} </div>\n          <div v-if=\"this.isSelectedQuestion===true\" v-html=\"this.selectedQuestionData.description\"> </div>\n          <div v-if=\"this.isSelectedQuestion===true\">Language : {{this.selectedQuestionData.language}} \n          <textarea v-model=\"answer\" placeholder=\"write code here..\" rows=\"20\" cols=\"20\"></textarea>\n          <button type=\"submit\">\n              Submit\n          </button>\n          </div>\n      </form>\n    </b-col>\n\n      <b-col v-if=\"this.isSubmitted===true\">\n        <form @submit.prevent=\"validate\">\n              <button type=\"submit\">\n                  Validate\n              </button>\n              <b-row v-if=\"this.tornadoServerMessage.success===true\">\n                Successful!!\n              </b-row>\n              <b-row v-if=\"this.tornadoServerMessage.success===false\">  \n                {{this.tornadoServerMessage.error[0].exception}} </br>\n                {{this.tornadoServerMessage.error[0].traceback}}\n              </b-row>\n        </form>\n      </b-col>\n  </b-container> \n\n</div>\n\n</template>\n\n<script>\n\n\nimport axios from 'axios'\nlet base64 = require('base-64');\nlet username = 'hello';\nlet password = 'hello';\nlet url_validate = \"http://127.0.0.1:8000/api/validate/\"\nlet url_courses = \"http://127.0.0.1:8000/api/get_courses/\"\nlet url_start_quiz = \"http://127.0.0.1:8000/api/start_quiz/\"\nlet headers = new Headers();\nheaders.set('Authorization', 'Basic ' + base64.encode(username + \":\" + password));\nheaders.set('Accept', 'application/json');\nheaders.set('Content-Type', 'application/json');\n\nexport default {\n  name: 'TodoForm',\n  props: {\n      currentQuestion: {\n      type: Object\n    }\n  },\n\n  data () {\n    return {\n      questions: [],\n      courses: [],\n      selectedQuestionData: null,\n      isSelectedQuestion: false,\n      answer: \"\",\n      quizzes: [],\n      course_id: \"\",\n      attempt_no: \"\",\n      answer_paper_id: \"\",\n      user_id: \"\",\n      tornadoServerMessage: \"\",\n      isSubmitted: \"\",\n      isLearningModuleSelected:false,\n      isStartQuiz: false\n    }\n  },\n\n  computed: {\n\n  },\n\n  methods: {\n\n  selectQuestion(selectedQuestionData){\n    this.selectedQuestionData = selectedQuestionData; \n    this.isSelectedQuestion = true;\n    },\n\n  submit(){\n      this.tornadoServerMessage = \"\"\n      this.isSubmitted = true\n      fetch(url_validate.concat(this.answer_paper_id).concat(\"/\").concat(this.selectedQuestionData.id).concat(\"/\"), {\n      method: \"post\",\n      headers: headers,\n      body: JSON.stringify({\"answer\":this.answer})\n    })\n    .then(res => {\n              console.log(res)\n              return res.json()\n    })\n    .then(jsonResponse => {\n              console.log(jsonResponse)\n              this.user_id = jsonResponse.uid\n              console.log(this.user_id)\n    })\n    .catch(err => {err});\n    },\n\n  get_learning_module_for_this_course(course)\n  {\n    this.learning_module = course.learning_module\n    //console.log(this.learning_module)\n    this.isLearningModuleSelected = true\n    this.quizzes = course.learning_module[0].learning_unit\n\n    console.log(this.quizzes)\n    this.course_id = course.id\n  },\n\n  startQuiz(quiz)\n  {\n    fetch(url_start_quiz.concat(this.course_id).concat(\"/\").concat(quiz.quiz.id).concat(\"/\"), {\n        method: \"get\",\n        headers: headers,\n      })\n      .then(res => {\n                console.log(res)\n                return res.json()\n      })\n      .then(jsonResponse => {\n                console.log(jsonResponse)\n                this.questions = jsonResponse.questions\n                console.log(\"hello\")\n                console.log(jsonResponse.questions)\n                this.isStartQuiz  = true\n                this.answer_paper_id = jsonResponse.id\n                this.attempt_no = jsonResponse.attempt_number\n                this.$emit('loading_questions', this.questions)\n      })\n      .catch(err => {err});\n  },\n\n  validate(){\n      fetch(url_validate.concat(this.user_id).concat(\"/\"), {\n        method: \"get\",\n        headers: headers,\n      })\n      .then(res => {\n                console.log(res)\n                return res.json()\n      })\n      .then(jsonResponse => {\n                console.log(jsonResponse)\n                this.tornadoServerMessage = JSON.parse(jsonResponse.result)\n      })\n      .catch(err => {err});\n      },\n},\n\n/**\nfetch(url_post, {\n      method: 'get',\n      headers: headers,\n    },)\n    .then((response) => {\n      console.log(response)\n      return response.json()\n    })\n    .then((jsonData) => {\n      //this.questions = jsonData \n      console.log(jsonData)\n      //this.$emit('submit', this.questions)\n    })\n**/\n  \n  created () {\n    if(this.isSelected===true)\n    {\n      this.currentQuestion = this.selectedQuestionData\n    }\n  },\n\n  mounted: function(){\n    fetch(url_courses, {\n        method: \"get\",\n        headers: headers,\n      })\n      .then(res => {\n                console.log(res)\n                return res.json()\n      })\n      .then(jsonResponse => {\n                console.log(jsonResponse)\n                this.courses = jsonResponse\n                this.$emit('loading_courses', this.courses)\n      })\n      .catch(err => {err});\n  }\n}\n</script>\n\n<style scoped>\n.todo-form {\n  display: flex;\n  margin: 24px;\n  margin-bottom: 32px;\n  justify-content: center;\n}\n.todo-item {\n  margin: 16px 0;\n  padding: 8px;\n  padding-left: 16px;\n  background-color: #42b983;\n  border-radius: 8px;\n  color: white;\n  justify: left;\n}\n\n</style>\n"],"sourceRoot":"src/components"}]}