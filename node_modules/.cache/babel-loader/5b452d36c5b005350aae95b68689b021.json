{"remainingRequest":"/home/himanshu/Desktop/RA_Work/FOSSEE/prabhu_sir/vue/VueTodo/node_modules/babel-loader/lib/index.js!/home/himanshu/Desktop/RA_Work/FOSSEE/prabhu_sir/vue/VueTodo/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/himanshu/Desktop/RA_Work/FOSSEE/prabhu_sir/vue/VueTodo/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/himanshu/Desktop/RA_Work/FOSSEE/prabhu_sir/vue/VueTodo/src/components/TodoForm.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/himanshu/Desktop/RA_Work/FOSSEE/prabhu_sir/vue/VueTodo/src/components/TodoForm.vue","mtime":1559026934743},{"path":"/home/himanshu/Desktop/RA_Work/FOSSEE/prabhu_sir/vue/VueTodo/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/himanshu/Desktop/RA_Work/FOSSEE/prabhu_sir/vue/VueTodo/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/himanshu/Desktop/RA_Work/FOSSEE/prabhu_sir/vue/VueTodo/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/himanshu/Desktop/RA_Work/FOSSEE/prabhu_sir/vue/VueTodo/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport axios from 'axios';\n\nvar base64 = require('base-64');\n\nvar username = 'hello';\nvar password = 'hello';\nvar url2 = \"http://127.0.0.1:8000/api/questions/\";\nvar headers = new Headers();\nheaders.set('Authorization', 'Basic ' + base64.encode(username + \":\" + password));\nexport default {\n  name: 'TodoForm',\n  props: {\n    currentQuestion: {\n      type: Object\n    }\n  },\n  data: function data() {\n    return {\n      questions: [],\n      postData: [],\n      selectedQuestionData: null,\n      isSelected: false,\n      answer: \"\",\n      testdata: \"\"\n    };\n  },\n  computed: {},\n  methods: {\n    selectedQuestion: function selectedQuestion(selectedQuestionData) {\n      this.selectedQuestionData = selectedQuestionData;\n      this.isSelected = true;\n    },\n    submit: function submit() {\n      this.selectedQuestionData.solution = this.answer; // replace the answer for this question and let other questions unchanged\n\n      for (que in this.postData) {\n        if (que.summary === this.selectedQuestionData.summary) {\n          que.solution = this.answer;\n        }\n      } //url, data=dict(uid=uid, json_data=json_data, user_dir=user_dir)\n\n\n      this.testdata = {\n        'metadata': {\n          'user_answer': this.answer,\n          'language': 'python',\n          'partial_grading': \"\"\n        },\n        'test_case_data': [{\n          'test_case': 'assert 1==2',\n          'test_case_type': 'standardtestcase',\n          'weight': 0.0\n        }]\n      };\n      axios.post('http://127.0.0.1:55555/', {\n        method: \"OPTION\",\n        data: {\n          uid: 0,\n          json_data: this.testdata,\n          user_dir: \"\"\n        },\n        crossDomain: true\n      }).then(function (res) {\n        console.log(res);\n      }).catch(function (err) {});\n    }\n  },\n  created: function created() {\n    if (this.isSelected === true) {\n      this.currentQuestion = this.selectedQuestionData;\n    }\n  },\n  mounted: function mounted() {\n    var _this = this;\n\n    fetch(url2, {\n      method: 'get',\n      headers: headers\n    }).then(function (response) {\n      console.log(response);\n      return response.json();\n    }).then(function (jsonData) {\n      _this.questions = jsonData;\n      console.log(jsonData);\n\n      _this.$emit('submit', _this.questions);\n    });\n  }\n};",{"version":3,"sources":["TodoForm.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAgCA,OAAA,KAAA,MAAA,OAAA;;AACA,IAAA,MAAA,GAAA,OAAA,CAAA,SAAA,CAAA;;AACA,IAAA,QAAA,GAAA,OAAA;AACA,IAAA,QAAA,GAAA,OAAA;AACA,IAAA,IAAA,GAAA,sCAAA;AACA,IAAA,OAAA,GAAA,IAAA,OAAA,EAAA;AACA,OAAA,CAAA,GAAA,CAAA,eAAA,EAAA,WAAA,MAAA,CAAA,MAAA,CAAA,QAAA,GAAA,GAAA,GAAA,QAAA,CAAA;AAGA,eAAA;AACA,EAAA,IAAA,EAAA,UADA;AAEA,EAAA,KAAA,EAAA;AACA,IAAA,eAAA,EAAA;AACA,MAAA,IAAA,EAAA;AADA;AADA,GAFA;AAQA,EAAA,IARA,kBAQA;AACA,WAAA;AACA,MAAA,SAAA,EAAA,EADA;AAEA,MAAA,QAAA,EAAA,EAFA;AAGA,MAAA,oBAAA,EAAA,IAHA;AAIA,MAAA,UAAA,EAAA,KAJA;AAKA,MAAA,MAAA,EAAA,EALA;AAMA,MAAA,QAAA,EAAA;AANA,KAAA;AAQA,GAjBA;AAmBA,EAAA,QAAA,EAAA,EAnBA;AAuBA,EAAA,OAAA,EAAA;AACA,IAAA,gBADA,4BACA,oBADA,EACA;AACA,WAAA,oBAAA,GAAA,oBAAA;AACA,WAAA,UAAA,GAAA,IAAA;AACA,KAJA;AAMA,IAAA,MANA,oBAMA;AACA,WAAA,oBAAA,CAAA,QAAA,GAAA,KAAA,MAAA,CADA,CAEA;;AACA,WAAA,GAAA,IAAA,KAAA,QAAA,EACA;AACA,YAAA,GAAA,CAAA,OAAA,KAAA,KAAA,oBAAA,CAAA,OAAA,EACA;AACA,UAAA,GAAA,CAAA,QAAA,GAAA,KAAA,MAAA;AACA;AACA,OATA,CAUA;;;AACA,WAAA,QAAA,GAAA;AACA,oBAAA;AACA,yBAAA,KAAA,MADA;AAEA,sBAAA,QAFA;AAGA,6BAAA;AAHA,SADA;AAMA,0BAAA,CACA;AAAA,uBAAA,aAAA;AACA,4BAAA,kBADA;AAEA,oBAAA;AAFA,SADA;AANA,OAAA;AAaA,MAAA,KAAA,CAAA,IAAA,CAAA,yBAAA,EAAA;AAAA,QAAA,MAAA,EAAA,QAAA;AAAA,QAAA,IAAA,EAAA;AAAA,UAAA,GAAA,EAAA,CAAA;AAAA,UAAA,SAAA,EAAA,KAAA,QAAA;AAAA,UAAA,QAAA,EAAA;AAAA,SAAA;AAAA,QAAA,WAAA,EAAA;AAAA,OAAA,EAAA,IAAA,CAAA,UAAA,GAAA,EAAA;AACA,QAAA,OAAA,CAAA,GAAA,CAAA,GAAA;AACA,OAFA,EAGA,KAHA,CAGA,UAAA,GAAA,EAAA,CAAA,CAHA;AAIA;AAlCA,GAvBA;AA4DA,EAAA,OA5DA,qBA4DA;AACA,QAAA,KAAA,UAAA,KAAA,IAAA,EACA;AACA,WAAA,eAAA,GAAA,KAAA,oBAAA;AACA;AACA,GAjEA;AAmEA,EAAA,OAAA,EAAA,mBAAA;AAAA;;AACA,IAAA,KAAA,CAAA,IAAA,EAAA;AACA,MAAA,MAAA,EAAA,KADA;AAEA,MAAA,OAAA,EAAA;AAFA,KAAA,CAAA,CAIA,IAJA,CAIA,UAAA,QAAA,EAAA;AACA,MAAA,OAAA,CAAA,GAAA,CAAA,QAAA;AACA,aAAA,QAAA,CAAA,IAAA,EAAA;AACA,KAPA,EAQA,IARA,CAQA,UAAA,QAAA,EAAA;AACA,MAAA,KAAA,CAAA,SAAA,GAAA,QAAA;AACA,MAAA,OAAA,CAAA,GAAA,CAAA,QAAA;;AACA,MAAA,KAAA,CAAA,KAAA,CAAA,QAAA,EAAA,KAAA,CAAA,SAAA;AACA,KAZA;AAaA;AAjFA,CAAA","sourcesContent":["<template>\n<div>\n  <b-container class=\"xyz\">\n    <b-row>\n          \"Examination\"\n    </b-row>\n    <b-row>\n     <b-col>\n            <ul v-for=\"(q, index) in this.questions\" :key=\"index\" @click=\"selectedQuestion(q)\">\n            <li class=\"todo-item\"> {{index+1}} &nbsp;&nbsp;&nbsp; {{q.summary}} </li> \n            </ul>\n     </b-col>\n     <b-col cols=\"9\">\n        <form @submit.prevent=\"submit\">         \n          <div v-if=\"this.isSelected===true\"> {{this.selectedQuestionData.summary}} </div>\n          <div v-if=\"this.isSelected===true\" v-html=\"this.selectedQuestionData.description\"> </div>\n          <div v-if=\"this.isSelected===true\">Language : {{this.selectedQuestionData.language}} </div>\n          <textarea v-model=\"answer\" placeholder=\"write code here..\" rows=\"10\"></textarea>\n          <button type=\"submit\">\n              Submit\n          </button>\n        </form>\n     </b-col>\n    </b-row>\n  </b-container>\n\n<!--<div v-if=\"this.isSelected===true\"> {{this.selectedQuestionData}} </div>-->\n</div>\n\n</template>\n\n<script>\nimport axios from 'axios'\nlet base64 = require('base-64');\nlet username = 'hello';\nlet password = 'hello';\nlet url2 = \"http://127.0.0.1:8000/api/questions/\"\nlet headers = new Headers();\nheaders.set('Authorization', 'Basic ' + base64.encode(username + \":\" + password),);\n\n\nexport default {\n  name: 'TodoForm',\n  props: {\n      currentQuestion: {\n      type: Object\n    }\n  },\n\n  data () {\n    return {\n      questions: [],\n      postData: [],\n      selectedQuestionData: null,\n      isSelected: false,\n      answer: \"\",\n      testdata:\"\"\n    }\n  },\n\n  computed: {\n\n  },\n\n  methods: {\n  selectedQuestion(selectedQuestionData){\n    this.selectedQuestionData = selectedQuestionData; \n    this.isSelected = true;\n    },\n\n    submit(){\n          this.selectedQuestionData.solution = this.answer\n          // replace the answer for this question and let other questions unchanged\n          for(que in this.postData)\n          {\n              if(que.summary === this.selectedQuestionData.summary)\n              {\n                  que.solution = this.answer\n              }\n          }\n//url, data=dict(uid=uid, json_data=json_data, user_dir=user_dir)\n        this.testdata = {\n            'metadata': {\n                'user_answer': this.answer,\n                'language': 'python',\n                'partial_grading': \"\"\n            },\n            'test_case_data': [\n                {'test_case': 'assert 1==2',\n                 'test_case_type': 'standardtestcase',\n                 'weight': 0.0}\n            ]\n        }\n\n          axios.post('http://127.0.0.1:55555/',{method:\"OPTION\", data:{uid:0, json_data:this.testdata, user_dir:\"\"}, crossDomain: true}).then(res => {\n              console.log(res)\n          })\n          .catch(err => {});\n      }\n  },\n  \n  created () {\n    if(this.isSelected===true)\n    {\n      this.currentQuestion = this.selectedQuestionData\n    }\n  },\n\n  mounted: function(){\n    fetch(url2, {\n      method: 'get',\n      headers: headers,\n    },)\n    .then((response) => {\n      console.log(response)\n      return response.json()\n    })\n    .then((jsonData) => {\n      this.questions = jsonData \n      console.log(jsonData)\n      this.$emit('submit', this.questions)\n    })\n  }\n}\n</script>\n\n<style scoped>\n.todo-form {\n  display: flex;\n  margin: 24px;\n  margin-bottom: 32px;\n  justify-content: center;\n}\n.todo-item {\n  margin: 16px 0;\n  padding: 8px;\n  padding-left: 16px;\n  background-color: #42b983;\n  border-radius: 8px;\n  color: white;\n  justify: left;\n}\n.form-label {\n  margin-right: 16px;\n}\n\n\n.form-input {\n  display: block;\n  margin: 8px 0;\n  padding: 8px;\n  border-radius: 3px;\n  border: 0.5px solid rgba(0, 0, 0, 0.15);\n}\n\n.form-input:focus {\n  border: 0.5px solid #42b983;\n  outline: 0;\n  box-shadow: none;\n}\n\n.todo-form-btn {\n  /* clear button styling */\n  background: none;\n  outline: none;\n  border: none;\n  padding: 0;\n\n  /* custom styling */\n  background-color: white;\n  border: 1px solid #42b983;\n  margin-left: 8px;\n  margin-bottom: 8px;\n  border-radius: 50%;\n  width: 32px;\n  height: 32px;\n  color: #42b983;\n  font-size: 1.2em;\n  /* font-weight: bold; */\n  align-self: flex-end;\n}\n\n.cancel-button {\n  font-size: 0.83em;\n}\n\ntodo-form-btn:active {\n  background-color: #42b983;\n  color: white;\n}\n</style>\n"],"sourceRoot":"src/components"}]}