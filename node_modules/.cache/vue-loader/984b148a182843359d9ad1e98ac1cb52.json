{"remainingRequest":"/home/himanshu/Desktop/RA_Work/FOSSEE/prabhu_sir/vue/VueTodo/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/himanshu/Desktop/RA_Work/FOSSEE/prabhu_sir/vue/VueTodo/src/components/TodoForm.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/himanshu/Desktop/RA_Work/FOSSEE/prabhu_sir/vue/VueTodo/src/components/TodoForm.vue","mtime":1558437171684},{"path":"/home/himanshu/Desktop/RA_Work/FOSSEE/prabhu_sir/vue/VueTodo/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/himanshu/Desktop/RA_Work/FOSSEE/prabhu_sir/vue/VueTodo/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/himanshu/Desktop/RA_Work/FOSSEE/prabhu_sir/vue/VueTodo/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/himanshu/Desktop/RA_Work/FOSSEE/prabhu_sir/vue/VueTodo/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport axios from 'axios'\nlet base64 = require('base-64');\nlet username = 'hello';\nlet password = 'hello';\n//let url1 = \"http://dummy.restapiexample.com/api/v1/employees\"\nlet url2 = \"http://127.0.0.1:8000/api/questions/\"\nlet headers = new Headers();\nheaders.set('Authorization', 'Basic ' + base64.encode(username + \":\" + password),);\n\n\nexport default {\n  name: 'TodoForm',\n  props: {\n      currentQuestion: {\n      type: Object\n    }\n  },\n\n  data () {\n    return {\n      questions: [],\n      postData: [],\n      selectedQuestionData: null,\n      isSelected: false,\n      answer: \"\"\n    }\n  },\n\n  computed: {\n\n  },\n\n  methods: {\n  selectedQuestion(selectedQuestionData){\n    this.selectedQuestionData = selectedQuestionData; \n    this.isSelected = true;\n    },\n\n    submit(){\n          this.selectedQuestionData.solution = this.answer\n          // replace the answer for this question and let other questions unchanged\n          for(que in this.postData)\n          {\n              if(que.summary === this.selectedQuestionData.summary)\n              {\n                  que.solution = this.answer\n              }\n          }\n\n          axios.post('http://127.0.0.1:8000/api/questions/1', this.selectedQuestionData)\n          .then(res => {\n              console.log(res)\n          })\n          .catch(err => {});\n      }\n  },\n  \n  created () {\n    if(this.isSelected===true)\n    {\n      this.currentQuestion = this.selectedQuestionData\n    }\n  },\n\n  mounted: function(){\n    fetch(url2, {\n      method: 'get',\n      headers: headers,\n    },)\n    .then((response) => {\n      console.log(response)\n      return response.json()\n    })\n    .then((jsonData) => {\n      this.questions = jsonData \n      console.log(jsonData)\n      this.$emit('submit', this.questions)\n    })\n  }\n}\n",{"version":3,"sources":["TodoForm.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAgCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"TodoForm.vue","sourceRoot":"src/components","sourcesContent":["<template>\n<div>\n  <b-container class=\"xyz\">\n    <b-row>\n          \"Examination\"\n    </b-row>\n    <b-row>\n     <b-col>\n            <ul v-for=\"(q, index) in this.questions\" :key=\"index\" @click=\"selectedQuestion(q)\">\n            <li class=\"todo-item\"> {{index+1}} &nbsp;&nbsp;&nbsp; {{q.summary}} </li> \n            </ul>\n     </b-col>\n     <b-col cols=\"9\">\n        <form @submit.prevent=\"submit\">         \n          <div v-if=\"this.isSelected===true\"> {{this.selectedQuestionData.summary}} </div>\n          <div v-if=\"this.isSelected===true\" v-html=\"this.selectedQuestionData.description\"> </div>\n          <div v-if=\"this.isSelected===true\">Language : {{this.selectedQuestionData.language}} </div>\n          <textarea v-model=\"answer\" placeholder=\"write code here..\" rows=\"10\"></textarea>\n          <button type=\"submit\">\n              Submit\n          </button>\n        </form>\n     </b-col>\n    </b-row>\n  </b-container>\n\n<!--<div v-if=\"this.isSelected===true\"> {{this.selectedQuestionData}} </div>-->\n</div>\n\n</template>\n\n<script>\nimport axios from 'axios'\nlet base64 = require('base-64');\nlet username = 'hello';\nlet password = 'hello';\n//let url1 = \"http://dummy.restapiexample.com/api/v1/employees\"\nlet url2 = \"http://127.0.0.1:8000/api/questions/\"\nlet headers = new Headers();\nheaders.set('Authorization', 'Basic ' + base64.encode(username + \":\" + password),);\n\n\nexport default {\n  name: 'TodoForm',\n  props: {\n      currentQuestion: {\n      type: Object\n    }\n  },\n\n  data () {\n    return {\n      questions: [],\n      postData: [],\n      selectedQuestionData: null,\n      isSelected: false,\n      answer: \"\"\n    }\n  },\n\n  computed: {\n\n  },\n\n  methods: {\n  selectedQuestion(selectedQuestionData){\n    this.selectedQuestionData = selectedQuestionData; \n    this.isSelected = true;\n    },\n\n    submit(){\n          this.selectedQuestionData.solution = this.answer\n          // replace the answer for this question and let other questions unchanged\n          for(que in this.postData)\n          {\n              if(que.summary === this.selectedQuestionData.summary)\n              {\n                  que.solution = this.answer\n              }\n          }\n\n          axios.post('http://127.0.0.1:8000/api/questions/1', this.selectedQuestionData)\n          .then(res => {\n              console.log(res)\n          })\n          .catch(err => {});\n      }\n  },\n  \n  created () {\n    if(this.isSelected===true)\n    {\n      this.currentQuestion = this.selectedQuestionData\n    }\n  },\n\n  mounted: function(){\n    fetch(url2, {\n      method: 'get',\n      headers: headers,\n    },)\n    .then((response) => {\n      console.log(response)\n      return response.json()\n    })\n    .then((jsonData) => {\n      this.questions = jsonData \n      console.log(jsonData)\n      this.$emit('submit', this.questions)\n    })\n  }\n}\n</script>\n\n<style scoped>\n.todo-form {\n  display: flex;\n  margin: 24px;\n  margin-bottom: 32px;\n  justify-content: center;\n}\n.todo-item {\n  margin: 16px 0;\n  padding: 8px;\n  padding-left: 16px;\n  background-color: #42b983;\n  border-radius: 8px;\n  color: white;\n  justify: left;\n}\n.form-label {\n  margin-right: 16px;\n}\n\n\n.form-input {\n  display: block;\n  margin: 8px 0;\n  padding: 8px;\n  border-radius: 3px;\n  border: 0.5px solid rgba(0, 0, 0, 0.15);\n}\n\n.form-input:focus {\n  border: 0.5px solid #42b983;\n  outline: 0;\n  box-shadow: none;\n}\n\n.todo-form-btn {\n  /* clear button styling */\n  background: none;\n  outline: none;\n  border: none;\n  padding: 0;\n\n  /* custom styling */\n  background-color: white;\n  border: 1px solid #42b983;\n  margin-left: 8px;\n  margin-bottom: 8px;\n  border-radius: 50%;\n  width: 32px;\n  height: 32px;\n  color: #42b983;\n  font-size: 1.2em;\n  /* font-weight: bold; */\n  align-self: flex-end;\n}\n\n.cancel-button {\n  font-size: 0.83em;\n}\n\ntodo-form-btn:active {\n  background-color: #42b983;\n  color: white;\n}\n</style>\n"]}]}